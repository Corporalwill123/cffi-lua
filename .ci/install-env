#!/bin/sh

expected_triplet=$TARGET

if [ -z "$expected_triplet" ]; then
    echo "ERROR: target triplet not provided!"
    exit 1
fi

ensure_tool() {
    command -v "$1" > /dev/null
    if [ $? -ne 0 ]; then
        echo "ERROR: Missing tool: $1"
        exit 1
    fi
}

echo ">> Checking tools..."

ensure_tool gcc
ensure_tool g++
ensure_tool clang
ensure_tool clang++
ensure_tool git
ensure_tool tar
ensure_tool wget
ensure_tool make

mkdir -p host_tools

echo ">> Installing meson..."

sudo apt-get install python3-setuptools python3-pip

if [ -n "$(command -v pip3)" ]; then
    sudo pip3 install meson
elif [ -n "$(command -v pip)" ]; then
    sudo pip install meson
else
    echo "ERROR: pip not found"
    exit 1
fi

echo ">> Getting libffi..."

wget "https://ftp.octaforge.org/q66/random/libffi.tar.gz" || exit 1
tar xf libffi.tar.gz || exit 1

echo ">> Getting lua..."

for luaver in ${LUA_VERSIONS}; do
    wget "https://www.lua.org/ftp/lua-${luaver}.tar.gz" || exit 1
    tar xf lua-${luaver}.tar.gz || exit 1
done

if [ "$(uname -s)" != "Linux" ]; then
    exit 0
fi

current_triplet=`gcc -dumpmachine`

if [ -z "$current_triplet" ]; then
    echo "ERROR: Native compiler not present!"
    exit 1
fi

if [ "$expected_triplet" = "$current_triplet" ]; then
    exit 0
fi

case "${expected_triplet}" in
    x86_64*mingw*)
        qemu_cpu="none"
        ;;
    x86_64*)
        qemu_cpu="x86_64"
        ;;
    i686*)
        qemu_cpu="i386"
        ;;
    powerpc64le*)
        qemu_cpu="ppc64le"
        ;;
    powerpc64*)
        qemu_cpu="ppc64"
        ;;
    powerpcle*)
        echo "ERROR: ppcle not supported in qemu"
        exit 1
        ;;
    powerpc*)
        qemu_cpu="ppc"
        ;;
    aarch64-*)
        qemu_cpu="aarch64"
        ;;
    arm-*)
        qemu_cpu="arm"
        ;;
    riscv64-*)
        qemu_cpu="riscv64"
        ;;
    s390x*)
        qemu_cpu="s390x"
        ;;
    mips-*)
        qemu_cpu="mips"
        ;;
    m68k*)
        qemu_cpu="m68k"
        ;;
    *)
        echo "ERROR: unknown qemu CPU"
        exit 1
        ;;
esac

echo ">> Installing toolchain..."

if [ "$expected_triplet" = "x86_64-w64-mingw32" ]; then
    gcc_suffix="mingw-w64"
    extra_packages="wine"
else
    gcc_suffix="${expected_triplet}"
    extra_packages="qemu-user"
fi

sudo apt-get update || exit 1
sudo apt-get install gcc-${gcc_suffix} g++-${gcc_suffix} ${extra_packages}

if [ "$qemu_cpu" != "none" ]; then
    ln -s `which qemu-${qemu_cpu}` `pwd`/host_tools/qemu
    # work around glibc being dumb
    # the cache format is not endian agnostic, so unless a dummy file exists
    # here, qemu will try to use host's and it will crash guest glibc on BE
    sudo mkdir -p /usr/${expected_triplet}/etc
    sudo touch /usr/${expected_triplet}/etc/ld.so.cache
fi

exit $?
